{"mappings":"qhBASA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGb,MAAMQ,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAE3CF,EAAKM,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAW,IAAIC,SAASV,GACxBW,EAAQC,SAASH,EAASI,IAAI,UAC9BC,EAAOF,SAASH,EAASI,IAAI,SAC7BE,EAASH,SAASH,EAASI,IAAI,WAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnC1B,EAAc0B,EADOL,GAASK,EAAI,GAAKF,GAEpCG,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqB7B,QAAiBC,MAAU,IAGnD6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoB/B,QAAeC,MAAU,G,CAIrDW,EAAWoB,MAAQ,GACnBnB,EAAUmB,MAAQ,GAClBlB,EAAYkB,MAAQ,EAAE","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const formData = new FormData(form);\n  const delay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  for (let i = 1; i <= amount; i += 1) {\n    const currentDelay = delay + (i - 1) * step;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  delayInput.value = '';\n  stepInput.value = '';\n  amountInput.value = '';\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","event","preventDefault","formData","FormData","delay1","parseInt","get","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","value"],"version":3,"file":"03-promises.3bb3c706.js.map"}